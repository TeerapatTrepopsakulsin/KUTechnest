# Generated by Django 5.2.6 on 2025-09-15 15:46

import django.core.validators
import django.db.models.deletion
import jobs.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contacts', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('work_field', models.CharField(choices=[('it-support', 'IT Support / Helpdesk'), ('cloud', 'Cloud (AWS/GCP/Azure)'), ('backend', 'Backend Engineer'), ('frontend', 'Frontend Developer'), ('fullstack', 'Full-stack Developer'), ('devops', 'DevOps / Platform'), ('qa', 'QA / Test Engineer'), ('mobile', 'Mobile Developer'), ('data-analyst', 'Data Analyst'), ('data-engineer', 'Data Engineer'), ('data-scientist', 'Data Scientist'), ('ai-ml', 'AI / ML'), ('security', 'Security / SecOps'), ('network', 'Network Engineer'), ('sysadmin', 'System Administrator'), ('database', 'Database / DBA'), ('ui-ux', 'UI/UX Designer'), ('product-designer', 'Product Designer'), ('game-dev', 'Game Developer'), ('embedded', 'Embedded / IoT'), ('other', 'Other')], db_index=True, default='other', max_length=32)),
                ('employment_type', models.CharField(choices=[('full_time', 'Full time'), ('part_time', 'Part time'), ('internship', 'Internship'), ('contract', 'Contract')], default='full_time', max_length=20)),
                ('location', models.CharField(choices=[('bangkok', 'Bangkok'), ('chiang-mai', 'Chiang Mai'), ('chiang-rai', 'Chiang Rai'), ('lampang', 'Lampang'), ('lamphun', 'Lamphun'), ('mae-hong-son', 'Mae Hong Son'), ('nakhon-sawan', 'Nakhon Sawan'), ('nan', 'Nan'), ('phayao', 'Phayao'), ('phetchabun', 'Phetchabun'), ('phichit', 'Phichit'), ('phitsanulok', 'Phitsanulok'), ('phrae', 'Phrae'), ('sukhothai', 'Sukhothai'), ('tak', 'Tak'), ('uthai-thani', 'Uthai Thani'), ('uttaradit', 'Uttaradit'), ('chumphon', 'Chumphon'), ('krabi', 'Krabi'), ('nakhon-si-thammarat', 'Nakhon Si Thammarat'), ('narathiwat', 'Narathiwat'), ('pattani', 'Pattani'), ('phang-nga', 'Phang Nga'), ('phatthalung', 'Phatthalung'), ('phuket', 'Phuket'), ('ranong', 'Ranong'), ('satun', 'Satun'), ('songkhla', 'Songkhla'), ('surat-thani', 'Surat Thani'), ('trang', 'Trang'), ('yala', 'Yala'), ('chachoengsao', 'Chachoengsao'), ('chanthaburi', 'Chanthaburi'), ('chonburi', 'Chonburi'), ('prachinburi', 'Prachinburi'), ('rayong', 'Rayong'), ('sa-kaeo', 'Sa Kaeo'), ('trat', 'Trat'), ('amnat-charoen', 'Amnat Charoen'), ('bueng-kan', 'Bueng Kan'), ('buriram', 'Buriram'), ('chaiyaphum', 'Chaiyaphum'), ('kalasin', 'Kalasin'), ('khon-kaen', 'Khon Kaen'), ('loei', 'Loei'), ('maha-sarakham', 'Maha Sarakham'), ('mukdahan', 'Mukdahan'), ('nakhon-phanom', 'Nakhon Phanom'), ('nakhon-ratchasima', 'Nakhon Ratchasima'), ('nong-bua-lamphu', 'Nong Bua Lamphu'), ('nong-khai', 'Nong Khai'), ('roi-et', 'Roi Et'), ('sakon-nakhon', 'Sakon Nakhon'), ('sisaket', 'Sisaket'), ('surin', 'Surin'), ('ubon-ratchathani', 'Ubon Ratchathani'), ('udon-thani', 'Udon Thani'), ('yasothon', 'Yasothon'), ('ang-thong', 'Ang Thong'), ('chai-nat', 'Chai Nat'), ('kanchanaburi', 'Kanchanaburi'), ('lopburi', 'Lopburi'), ('nakhon-nayok', 'Nakhon Nayok'), ('nakhon-pathom', 'Nakhon Pathom'), ('nonthaburi', 'Nonthaburi'), ('pathum-thani', 'Pathum Thani'), ('phra-nakhon-si-ayutthaya', 'Phra Nakhon Si Ayutthaya'), ('prachuap-khiri-khan', 'Prachuap Khiri Khan'), ('ratchaburi', 'Ratchaburi'), ('samut-prakan', 'Samut Prakan'), ('samut-sakhon', 'Samut Sakhon'), ('samut-songkhram', 'Samut Songkhram'), ('saraburi', 'Saraburi'), ('sing-buri', 'Sing Buri'), ('suphan-buri', 'Suphan Buri')], max_length=40)),
                ('onsite', models.BooleanField(default=False, help_text='True if onsite, False if remote')),
                ('salary', models.IntegerField(help_text='Salary in your local currency')),
                ('min_year', models.IntegerField(help_text='Minimum years of experience required')),
                ('requirement', models.TextField(help_text='Job requirements and qualifications')),
                ('short_description', models.CharField(blank=True, max_length=300, null=True)),
                ('long_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='jobs.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Full name', max_length=200, null=True)),
                ('nick_name', models.CharField(blank=True, help_text='Preferred nickname', max_length=30, null=True)),
                ('pronoun', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.PositiveSmallIntegerField(help_text='Age in years', validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(100)])),
                ('year', models.PositiveSmallIntegerField()),
                ('ku_generation', models.PositiveSmallIntegerField()),
                ('faculty', models.CharField(max_length=100)),
                ('major', models.CharField(blank=True, max_length=100, null=True)),
                ('about_me', models.TextField(blank=True, help_text='Tell us about yourself')),
                ('email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('cv', models.FileField(blank=True, help_text='Upload your CV (PDF recommended)', null=True, upload_to=jobs.models.student_file_upload_path)),
                ('resume', models.FileField(blank=True, help_text='Upload your resume (PDF recommended)', null=True, upload_to=jobs.models.student_file_upload_path)),
                ('transcript', models.FileField(blank=True, help_text='Upload your academic transcript (PDF recommended)', null=True, upload_to=jobs.models.student_file_upload_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
